# -*- coding: utf-8 -*-
# -----------------------------------------------------------------------------
# Project Euler / Problem 2 
# Tolga Kirt / 02.2017
# -----------------------------------------------------------------------------
# Each new term in the Fibonacci sequence is generated by adding the previous 
# two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not 
# exceed four million, find the sum of the even-valued terms.
# -----------------------------------------------------------------------------

# Start accumulator from zero
finalSum = 0

# Start initial fibonnaci number from 1
fibonnaciNumber = 1

#Â This useful, because a fibonacci number is
# 	fibonacci_number = fibonacci_number + fibonacci_number_previous
fibonnaciNumber_previous = 1

# Test all fibonacci numbers below four million
while fibonnaciNumber < 4000000:
	
	# Check for even-valued terms from finoacci
	if((fibonnaciNumber % 2) == 0):
		finalSum += fibonnaciNumber

	# Hold this number for a while
	tmp = fibonnaciNumber_previous

	# Store _this_ number for later usage
	fibonnaciNumber_previous = fibonnaciNumber

	# Calculate the next fibonacciNumber
	fibonnaciNumber += tmp

# Print out the final result
print "Result is : " + str(finalSum)
